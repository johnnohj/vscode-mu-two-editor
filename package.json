{
	"name": "mu-two-editor",
	"displayName": "Mu 2 Editor",
	"description": "Mu Editor for CircuitPython in VS Code",
	"version": "0.0.1",
	"publisher": "mu-two",
	"private": true,
	"license": "MIT",
	"engines": {
		"vscode": "^1.74.0"
	},
	"extensionKind": [
		"ui",
		"workspace"
	],
	"categories": [
		"Education",
		"Programming Languages",
		"Testing",
		"Other"
	],
	"extensionDependencies": [
		"ms-python.python"
	],
	"activationEvents": [
		"onLanguage:python",
		"onCommand:muTwo.workspace.create",
		"onCommand:muTwo.workspace.open",
		"onCommand:muTwo.editor.openEditor",
		"workspaceContains:**/*.py",
		"workspaceContains:**/code.py",
		"workspaceContains:**/main.py",
		"onFileSystem:mutwo"
	],
	"main": "./dist/extension.js",
	"contributes": {
		"viewsContainers": {
			"panel": [
				{
					"id": "replContainer",
					"title": "REPL",
					"icon": "assets/Mu2NoCirc-Red.svg"
				}
			],
			"activitybar": [
				{
					"id": "libraryManager",
					"title": "Mu2 Libraries",
					"icon": "assets/Mu2.svg"
				},
				{
					"id": "boardManager",
					"title": "Mu2 Board",
					"icon": "$(circuit-board)"
				}
			]
		},
		"views": {
			"replContainer": [
				{
					"type": "webview",
					"id": "muTwo.replView",
					"name": "REPL",
					"icon": "assets/Mu2NoCirc-Red.svg"
				}
			],
			"libraryManager": [
				{
					"id": "muTwo.ext.ctpyLibraries",
					"name": "CircuitPython Libraries",
					"when": "workspaceHasProjectsFolder",
					"icon": "assets/Blinka.svg"
				}
			],
			"boardManager": [
				{
					"id": "muTwo.ext.boardManager",
					"name": "Mu2 Board View",
					"when": "workspaceHasProjectsFolder",
					"icon": "$(circuit-board)"
				},
				{
					"type": "webview",
					"id": "muTwo.ext.boardTwin",
					"name": "Mu2 Board",
					"when": "workspaceHasProjectsFolder",
					"icon": "$(circuit-board)"
				},
				{
					"type": "webview",
					"id": "muTwo.ext.sensorBoard",
					"name": "Mu2 Sensor",
					"when": "workspaceHasProjectsFolder",
					"icon": "$(circuit-board)"
				}
			],
			"explorer": [
				{
					"id": "muTwo.workspaceProjects",
					"name": "CircuitPython Projects",
					"when": "workspaceHasProjectsFolder",
					"icon": "assets/Mu2.svg"
				},
				{
					"id": "muTwo.libraryManager",
					"name": "Workspace Libraries",
					"when": "workspaceHasProjectsFolder",
					"icon": "assets/Mu2.svg"
				}
			]
		},
		"menus": {
			"editor/title": [
				{
					"command": "muTwo.editor.showPanel",
					"when": "resourceExtname == .py && muTwo.connectedRepl.panelCollapsed != false",
					"icon": "$(layout-panel-off)",
					"title": "Show Connected REPL",
					"group": "navigation"
				},
				{
					"command": "muTwo.editor.hidePanel",
					"when": "resourceExtname == .py && muTwo.connectedRepl.panelCollapsed == false",
					"icon": "$(layout-panel)",
					"title": "Hide Connected REPL",
					"group": "navigation"
				},
				{
					"command": "muTwo.editor.showHeader",
					"when": "activeWebviewPanelId == 'muTwo.connectedRepl' && muTwo.connectedRepl.headerCollapsed == true",
					"icon": "$(chevron-down)",
					"title": "Show Panel Header",
					"group": "navigation"
				},
				{
					"command": "muTwo.editor.hideHeader",
					"when": "activeWebviewPanelId == 'muTwo.connectedRepl' && muTwo.connectedRepl.headerCollapsed != true",
					"icon": "$(chevron-up)",
					"title": "Hide Panel Header",
					"group": "navigation"
				},
				{
					"command": "muTwo.editor.showPlotterHeader",
					"when": "activeWebviewPanelId == 'muTwo.connected*' && muTwo.connectedPlotter.headerCollapsed == true",
					"icon": "$(chevron-down)",
					"title": "Show Panel Header",
					"group": "navigation"
				},
				{
					"command": "muTwo.editor.hidePlotterHeader",
					"when": "activeWebviewPanelId == 'muTwo.connected*' && muTwo.connectedPlotter.headerCollapsed != true",
					"icon": "$(chevron-up)",
					"title": "Hide Panel Header",
					"group": "navigation"
				},
				{
					"command": "muTwo.editor.showHardwarePanel",
					"when": "activeWebviewPanelId == 'muTwo.connected*' && muTwo.connectedHardware.exists != true",
					"icon": "$(circuit-board)",
					"title": "Show Hardware Simulator",
					"group": "navigation"
				},
				{
					"command": "muTwo.editor.showPlotterPanel",
					"when": "activeWebviewPanelId == 'muTwo.connected*' && muTwo.connectedPlotter.exists != true",
					"icon": "$(graph)",
					"title": "Show Data Plotter",
					"group": "navigation"
				}
			],
			"commandPalette": [
				{
					"command": "muTwo.workspace.create"
				},
				{
					"command": "muTwo.workspace.open"
				},
				{
					"command": "muTwo.workspace.list"
				},
				{
					"command": "muTwo.workspace.delete"
				},
				{
					"command": "muTwo.workspace.refresh",
					"when": "muTwo.Workspace.isOpen"
				},
				{
					"command": "muTwo.workspace.manage",
					"when": "muTwo.Workspace.isOpen"
				},
				{
					"command": "muTwo.workspace.restoreToInitial",
					"when": "muTwo.Workspace.isOpen"
				},
				{
					"command": "muTwo.editor.showPanel",
					"when": "muTwo.editor.navIcon == true && muTwo.editor.panelCollapsed == true"
				}
			],
			"view/title": [
				{
					"command": "muTwo.projects.refresh",
					"when": "view == muTwo.workspaceProjects",
					"group": "navigation"
				},
				{
					"command": "muTwo.projects.resumeSelected",
					"when": "view == muTwo.workspaceProjects",
					"group": "navigation"
				},
				{
					"command": "muTwo.projects.saveCurrentAs",
					"when": "view == muTwo.workspaceProjects",
					"group": "navigation"
				},
				{
					"command": "muTwo.library.refresh",
					"when": "view == muTwo.libraryManager",
					"group": "navigation"
				},
				{
					"command": "muTwo.library.search",
					"when": "view == muTwo.libraryManager",
					"group": "navigation"
				},
				{
					"command": "muTwo.library.downloadBundle",
					"when": "view == muTwo.libraryManager",
					"group": "navigation"
				}
			],
			"view/item/context": [
				{
					"command": "muTwo.library.install",
					"when": "view == muTwo.libraryManager && viewItem == availableLibrary",
					"group": "inline"
				},
				{
					"command": "muTwo.library.remove",
					"when": "view == muTwo.libraryManager && viewItem == installedLibrary",
					"group": "inline"
				},
				{
					"command": "muTwo.library.info",
					"when": "view == muTwo.libraryManager && viewItem =~ /Library$/",
					"group": "context"
				}
			]
		},
		"debuggers": [
			{
				"type": "circuitpython",
				"label": "CircuitPython",
				"languages": [
					"python"
				],
				"configurationAttributes": {
					"launch": {
						"required": [],
						"properties": {
							"port": {
								"type": "string",
								"description": "Serial port path (e.g., COM3, /dev/ttyUSB0)"
							},
							"baudRate": {
								"type": "number",
								"description": "Serial baud rate",
								"default": 115200
							},
							"program": {
								"type": "string",
								"description": "Python file to upload and run",
								"default": "${file}"
							},
							"autoDetect": {
								"type": "boolean",
								"description": "Auto-detect CircuitPython device",
								"default": true
							},
							"enableRepl": {
								"type": "boolean",
								"description": "Enable REPL mode after upload",
								"default": true
							},
							"boardType": {
								"type": "string",
								"description": "CircuitPython board type"
							}
						}
					},
					"attach": {
						"required": [
							"port"
						],
						"properties": {
							"port": {
								"type": "string",
								"description": "Serial port path"
							},
							"baudRate": {
								"type": "number",
								"description": "Serial baud rate",
								"default": 115200
							}
						}
					}
				},
				"initialConfigurations": [
					{
						"name": "CircuitPython: Launch REPL",
						"type": "circuitpython",
						"request": "launch",
						"autoDetect": true,
						"enableRepl": true
					},
					{
						"name": "CircuitPython: Upload Current File",
						"type": "circuitpython",
						"request": "launch",
						"program": "${file}",
						"autoDetect": true,
						"enableRepl": true
					}
				],
				"configurationSnippets": [
					{
						"label": "CircuitPython: Launch REPL",
						"description": "Launch CircuitPython REPL session",
						"body": {
							"name": "CircuitPython: Launch REPL",
							"type": "circuitpython",
							"request": "launch",
							"autoDetect": true,
							"enableRepl": true
						}
					}
				]
			}
		],
		"commands": [
			{
				"command": "muTwo.workspace.create",
				"category": "Mu 2",
				"title": "Create Mu 2 Workspace"
			},
			{
				"command": "muTwo.workspace.open",
				"category": "Mu 2",
				"title": "Open Mu 2 Workspace"
			},
			{
				"command": "muTwo.showView",
				"category": "Mu 2",
				"title": "Show REPL Panel"
			},
			{
				"command": "muTwo.installPythonDependencies",
				"category": "Mu 2",
				"title": "Ensure Environment Setup"
			},
			{
				"command": "muTwo.workspace.refresh",
				"category": "Mu 2",
				"title": "Refresh Connected Boards"
			},
			{
				"command": "muTwo.workspace.manage",
				"category": "Mu 2",
				"title": "Manage Mu 2 Workspaces"
			},
			{
				"command": "muTwo.workspace.list",
				"category": "Mu 2",
				"title": "List Workspaces"
			},
			{
				"command": "muTwo.workspace.delete",
				"category": "Mu 2",
				"title": "Delete Workspace"
			},
			{
				"command": "muTwo.workspace.changeBoardAssociation",
				"category": "Mu 2",
				"title": "Change Board Association"
			},
			{
				"command": "muTwo.workspace.restoreToInitial",
				"category": "Mu 2",
				"title": "Restore Workspace to Initial Configuration"
			},
			{
				"command": "muTwo.deviceDrive.status",
				"category": "Mu 2",
				"title": "Show Device Drive Integration Status"
			},
			{
				"command": "muTwo.editor.showPanel",
				"category": "Mu 2",
				"icon": "$(layout-panel-off)",
				"title": "Mu 2 editor subpanel: Show"
			},
			{
				"command": "muTwo.editor.hidePanel",
				"category": "Mu 2",
				"icon": "$(layout-panel)",
				"title": "Mu 2 editor subpanel: Hide"
			},
			{
				"command": "muTwo.editor.showHeader",
				"when": "activeWebviewPanelId == 'muTwo.connectedRepl' && muTwo.connectedRepl.headerCollapsed == true",
				"icon": "$(chevron-down)",
				"title": "Mu 2 editor subpanel header: Show"
			},
			{
				"command": "muTwo.editor.hideHeader",
				"when": "activeWebviewPanelId == 'muTwo.connectedRepl' && muTwo.connectedRepl.headerCollapsed != true",
				"icon": "$(chevron-up)",
				"title": "Mu 2 editor subpanel header: Hide"
			},
			{
				"command": "muTwo.editor.showPlotterHeader",
				"when": "activeWebviewPanelId == 'muTwo.connectedPlotter' && muTwo.connectedPlotter.headerCollapsed == true",
				"icon": "$(chevron-down)",
				"title": "Mu 2 plotter panel header: Show"
			},
			{
				"command": "muTwo.editor.hidePlotterHeader",
				"when": "activeWebviewPanelId == 'muTwo.connectedPlotter' && muTwo.connectedPlotter.headerCollapsed != true",
				"icon": "$(chevron-up)",
				"title": "Mu 2 plotter panel header: Hide"
			},
			{
				"command": "muTwo.editor.showHardwarePanel",
				"category": "Mu 2",
				"icon": "$(circuit-board)",
				"title": "Show Hardware Simulator"
			},
			{
				"command": "muTwo.editor.showPlotterPanel",
				"category": "Mu 2",
				"icon": "$(graph)",
				"title": "Show Data Plotter"
			},
			{
				"command": "muTwo.editor.openEditor",
				"category": "Mu 2",
				"title": "Open Python File with Split View"
			},
			{
				"command": "muTwo.debug.testWebviewPanel",
				"category": "Mu 2",
				"title": "Test Webview Panel Creation"
			},
			{
				"command": "muTwo.dev.openLogFile",
				"category": "Mu 2 Dev",
				"title": "Open Development Log File"
			},
			{
				"command": "muTwo.dev.revealLogFile",
				"category": "Mu 2 Dev",
				"title": "Reveal Development Log File in File Explorer"
			},
			{
				"command": "muTwo.dev.showOutputChannel",
				"category": "Mu 2 Dev",
				"title": "Show Development Output Channel"
			},
			{
				"command": "muTwo.dev.listDevices",
				"category": "Mu 2 Dev",
				"title": "List All Detected Devices"
			},
			{
				"command": "muTwo.dev.refreshDevices",
				"category": "Mu 2 Dev",
				"title": "Refresh Device Detection"
			},
			{
				"command": "muTwo.debug.checkContext",
				"category": "Mu 2",
				"title": "Debug Context Values"
			},
			{
				"command": "muTwo.debug.startSession",
				"category": "Mu 2",
				"title": "Start CircuitPython Debug Session"
			},
			{
				"command": "muTwo.debug.stopSession",
				"category": "Mu 2",
				"title": "Stop CircuitPython Debug Session"
			},
			{
				"command": "muTwo.debug.restartDevice",
				"category": "Mu 2",
				"title": "Restart CircuitPython Device"
			},
			{
				"command": "muTwo.debug.detectDevices",
				"category": "Mu 2",
				"title": "Detect CircuitPython Devices"
			},
			{
				"command": "muTwo.debug.showDeviceInfo",
				"category": "Mu 2",
				"title": "Show CircuitPython Device Info"
			},
			{
				"command": "muTwo.debug.selectDevice",
				"category": "Mu 2",
				"title": "Select CircuitPython Device"
			},
			{
				"command": "muTwo.debug.startRegisterMonitoring",
				"category": "Mu 2",
				"title": "Start Register Monitoring (Prototype)"
			},
			{
				"command": "muTwo.debug.enableI2CLogging",
				"category": "Mu 2 Debug",
				"title": "Enable I2C Transaction Logging"
			},
			{
				"command": "muTwo.debug.enableSPILogging",
				"category": "Mu 2 Debug",
				"title": "Enable SPI Transaction Logging"
			},
			{
				"command": "muTwo.debug.enableGPIOLogging",
				"category": "Mu 2 Debug",
				"title": "Enable GPIO State Logging"
			},
			{
				"command": "muTwo.debug.inspectMemory",
				"category": "Mu 2 Debug",
				"title": "Inspect Memory Usage"
			},
			{
				"command": "muTwo.debug.showVisualization",
				"category": "Mu 2 Debug",
				"title": "Show Debug Visualization"
			},
			{
				"command": "muTwo.serial.openInSerialMonitor",
				"category": "Mu 2",
				"title": "Open Current Device in Serial Monitor"
			},
			{
				"command": "muTwo.serial.checkSerialMonitorConflict",
				"category": "Mu 2",
				"title": "Check Serial Monitor Port Usage"
			},
			{
				"command": "muTwo.debug.showEnhancedStatus",
				"category": "Mu 2",
				"title": "Show Enhanced Serial Debugging Status"
			},
			{
				"command": "muTwo.debug.enableHardwareLogging",
				"category": "Mu 2",
				"title": "Enable Hardware Transaction Logging"
			},
			{
				"command": "muTwo.debug.disableHardwareLogging",
				"category": "Mu 2",
				"title": "Disable Hardware Transaction Logging"
			},
			{
				"command": "muTwo.debug.showHardwareLog",
				"category": "Mu 2",
				"title": "Show Hardware Transaction Log"
			},
			{
				"command": "muTwo.debug.showDeviceState",
				"category": "Mu 2",
				"title": "Show Device State and Diagnostics"
			},
			{
				"command": "muTwo.debug.openDebuggingPanel",
				"category": "Mu 2",
				"title": "Open REPL Debugging Panel"
			},
			{
				"command": "muTwo.blinka.executeCurrentFile",
				"category": "Mu 2",
				"title": "Execute Current File in Dual Environment"
			},
			{
				"command": "muTwo.blinka.executeSelection",
				"category": "Mu 2",
				"title": "Execute Selection with Dual Execution"
			},
			{
				"command": "muTwo.blinka.executeHardwareOnly",
				"category": "Mu 2",
				"title": "Execute on Hardware Only"
			},
			{
				"command": "muTwo.blinka.executeSimulationOnly",
				"category": "Mu 2",
				"title": "Execute in Simulation Only"
			},
			{
				"command": "muTwo.blinka.openComparisonPanel",
				"category": "Mu 2",
				"title": "Open Execution Comparison Panel"
			},
			{
				"command": "muTwo.blinka.showStatus",
				"category": "Mu 2",
				"title": "Show Blinka Status and Board Info"
			},
			{
				"command": "muTwo.dev.clearTestWorkspaceData",
				"category": "Mu 2 Development",
				"title": "Clear Test Workspace Data"
			},
			{
				"command": "muTwo.repl.openNativeTerminal",
				"category": "Mu 2",
				"title": "Open Mu 2 Shell Terminal",
				"icon": "$(terminal)"
			},
			{
				"command": "muTwo.projects.refresh",
				"category": "CircuitPython Projects",
				"title": "Refresh Projects",
				"icon": "$(refresh)"
			},
			{
				"command": "muTwo.projects.toggleSelection",
				"category": "CircuitPython Projects",
				"title": "Toggle Project Selection"
			},
			{
				"command": "muTwo.projects.resumeSelected",
				"category": "CircuitPython Projects",
				"title": "Resume Selected Project",
				"icon": "$(play)"
			},
			{
				"command": "muTwo.projects.saveCurrentAs",
				"category": "CircuitPython Projects",
				"title": "Save Current as Project",
				"icon": "$(save)"
			},
			{
				"command": "muTwo.projects.clearSelections",
				"category": "CircuitPython Projects",
				"title": "Clear All Selections",
				"icon": "$(clear-all)"
			},
			{
				"command": "muTwo.projects.generateRequirements",
				"category": "CircuitPython Projects",
				"title": "Generate requirements.txt from Workspace",
				"icon": "$(file-text)"
			},
			{
				"command": "muTwo.projects.installFromRequirements",
				"category": "CircuitPython Projects",
				"title": "Install Libraries from requirements.txt",
				"icon": "$(cloud-download)"
			},
			{
				"command": "muTwo.ext.library.refresh",
				"category": "CircuitPython Libraries",
				"title": "Refresh Libraries",
				"icon": "$(refresh)"
			},
			{
				"command": "muTwo.ext.library.install",
				"category": "CircuitPython Libraries",
				"title": "Install Library"
			},
			{
				"command": "muTwo.ext.library.remove",
				"category": "CircuitPython Libraries",
				"title": "Remove Library"
			},
			{
				"command": "muTwo.ext.library.downloadBundle",
				"category": "CircuitPython Libraries",
				"title": "Download CircuitPython Bundle",
				"icon": "$(cloud-download)"
			},
			{
				"command": "muTwo.library.search",
				"category": "CircuitPython Libraries",
				"title": "Search Libraries",
				"icon": "$(search)"
			},
			{
				"command": "muTwo.library.info",
				"category": "CircuitPython Libraries",
				"title": "Show Library Information"
			}
		],
		"configurationDefaults": {
			"[python]": {
				"python.analysis.diagnosticSeverityOverrides": {
					"reportShadowedImports": "none"
				}
			}
		},
		"configuration": {
			"title": "Mu 2 Editor",
			"properties": {
				"muTwo.history.defaultLoadLimit": {
					"type": "number",
					"default": 50,
					"minimum": 1,
					"maximum": 1000,
					"description": "Default number of history lines to load when using 'history --get' without specifying a limit"
				},
				"muTwo.defaultWorkspaceLocation": {
					"type": "string",
					"description": "Default location for new Mu 2 workspaces"
				},
				"muTwo.serial.globalPermission": {
					"type": "boolean",
					"default": false,
					"description": "Enable global permission for serial communications. When disabled, serial access requires confirmation for each workspace."
				},
				"muTwo.modifiedLibraryLocation": {
					"type": "string",
					"description": "Location for storing modified CircuitPython libraries"
				},
				"muTwo.autoDownloadGuides": {
					"type": "boolean",
					"default": true,
					"description": "Automatically download board guides when available"
				},
				"muTwo.circuitPythonDriveName": {
					"type": "string",
					"default": "CIRCUITPY",
					"description": "Name of the CircuitPython drive to look for when detecting connected boards"
				},
				"muTwo.serialMonitor.enableCooperation": {
					"type": "boolean",
					"default": true,
					"description": "Enable cooperation with VS Code Serial Monitor extension"
				},
				"muTwo.serialMonitor.autoSwitchOnConflict": {
					"type": "boolean",
					"default": false,
					"description": "Automatically offer to switch to Serial Monitor when port conflicts occur"
				},
				"muTwo.blinka.defaultExecutionMode": {
					"type": "string",
					"enum": [
						"auto-select",
						"dual-comparison",
						"hardware-only",
						"simulation-only"
					],
					"default": "auto-select",
					"description": "Default execution mode for Blinka dual execution"
				},
				"muTwo.blinka.preferredBoard": {
					"type": "string",
					"description": "Preferred board configuration for simulation"
				},
				"muTwo.blinka.enableProfiling": {
					"type": "boolean",
					"default": true,
					"description": "Enable memory profiling during code execution"
				},
				"muTwo.blinka.executionTimeout": {
					"type": "number",
					"default": 30000,
					"minimum": 5000,
					"maximum": 120000,
					"description": "Execution timeout in milliseconds"
				},
				"muTwo.blinka.autoShowComparison": {
					"type": "boolean",
					"default": true,
					"description": "Automatically show comparison results after dual execution"
				},
				"muTwo.pyscript.executionMode": {
					"type": "string",
					"enum": [
						"simulation",
						"proxy",
						"auto"
					],
					"default": "auto",
					"description": "PyScript execution mode: simulation (virtual board), proxy (mirror real hardware), or auto (detect and switch)"
				},
				"muTwo.pyscript.autoLoadWorkspace": {
					"type": "boolean",
					"default": true,
					"description": "Automatically load workspace files into PyScript when session starts"
				},
				"muTwo.pyscript.watchFileChanges": {
					"type": "boolean",
					"default": true,
					"description": "Watch for workspace file changes and automatically sync to PyScript"
				},
				"muTwo.debug.enableTransactionLogging": {
					"type": "boolean",
					"default": true,
					"description": "Enable hardware transaction logging for debugging"
				},
				"muTwo.debug.enableInteractiveDebugging": {
					"type": "boolean",
					"default": true,
					"description": "Enable interactive REPL debugging features"
				},
				"muTwo.debug.enableStateMonitoring": {
					"type": "boolean",
					"default": true,
					"description": "Enable real-time state monitoring"
				},
				"muTwo.debug.monitoredInterfaces": {
					"type": "array",
					"items": {
						"type": "string",
						"enum": [
							"i2c",
							"spi",
							"gpio",
							"uart"
						]
					},
					"default": [
						"i2c",
						"spi",
						"gpio"
					],
					"description": "Hardware interfaces to monitor for debugging"
				},
				"muTwo.debug.autoBreakOnExceptions": {
					"type": "boolean",
					"default": false,
					"description": "Automatically insert breakpoints on exceptions"
				},
				"muTwo.debug.visualization.showTimeline": {
					"type": "boolean",
					"default": true,
					"description": "Show transaction timeline in debug visualization"
				},
				"muTwo.debug.visualization.showHardwareState": {
					"type": "boolean",
					"default": true,
					"description": "Show hardware state panel in debug visualization"
				},
				"muTwo.debug.visualization.showMemoryChart": {
					"type": "boolean",
					"default": true,
					"description": "Show memory usage chart in debug visualization"
				},
				"muTwo.debug.visualization.refreshInterval": {
					"type": "number",
					"default": 2000,
					"minimum": 500,
					"maximum": 10000,
					"description": "Auto-refresh interval for debug visualization (milliseconds)"
				},
				"muTwo.debug.visualization.maxTransactions": {
					"type": "number",
					"default": 1000,
					"minimum": 100,
					"maximum": 10000,
					"description": "Maximum number of transactions to display in timeline"
				},
				"muTwo.terminal.preferredShell": {
					"type": "string",
					"enum": [
						"bash",
						"git-bash",
						"pwsh"
					],
					"default": "git-bash",
					"description": "Preferred shell for Mu 2 terminal profile",
					"enumDescriptions": [
						"Bash shell (Unix/Linux/WSL)",
						"Git Bash (Windows Git installation)",
						"PowerShell (Windows/Cross-platform)"
					]
				},
				"muTwo.terminal.enableShellIntegration": {
					"type": "boolean",
					"default": true,
					"description": "Enable VS Code shell integration features (command history, tab completion, etc.)"
				},
				"muTwo.terminal.autoActivateVenv": {
					"type": "boolean",
					"default": true,
					"description": "Automatically activate Mu Two Python virtual environment in terminal"
				},
				"muTwo.terminal.setAsDefaultProfile": {
					"type": "boolean",
					"default": true,
					"description": "Set Mu 2 Shell as the default terminal profile for workspaces"
				},
				"muTwo.python.environmentPath": {
					"type": "string",
					"description": "Path to Python virtual environment (leave empty for automatic management)"
				},
				"muTwo.python.autoSetupEnvironment": {
					"type": "boolean",
					"default": true,
					"description": "Automatically set up and manage Python virtual environment for CircuitPython development"
				},
				"muTwo.python.requiredPackages": {
					"type": "array",
					"items": {
						"type": "string"
					},
					"default": [
						"circup",
						"pyserial"
					],
					"description": "Python packages required for CircuitPython development (automatically installed)"
				},
				"muTwo.python.validateEnvironmentOnStartup": {
					"type": "boolean",
					"default": true,
					"description": "Validate Python environment on extension startup"
				},
				"muTwo.dev.logLevel": {
					"type": "string",
					"enum": [
						"DEBUG",
						"INFO",
						"WARN",
						"ERROR",
						"SUCCESS"
					],
					"default": "INFO",
					"description": "Minimum log level for development output channel"
				},
				"muTwo.dev.enabledComponents": {
					"type": "array",
					"items": {
						"type": "string",
						"enum": [
							"DEVICE",
							"BOARD",
							"PYTHON",
							"BUNDLE",
							"WORKSPACE",
							"PROJECT",
							"TERMINAL",
							"REPL",
							"WASM",
							"FILE",
							"STATE",
							"EXTENSION"
						]
					},
					"default": [],
					"description": "Component types to log (empty array = all components)"
				},
				"muTwo.dev.writeToFile": {
					"type": "boolean",
					"default": true,
					"description": "Write development logs to file in extension global storage (globalStorageUri/logs/)"
				},
				"muTwo.environment.showDebugInfo": {
					"type": "boolean",
					"default": false,
					"description": "Show detailed environment variable debug information in output channel"
				},
				"muTwo.environment.persistEnvironment": {
					"type": "boolean",
					"default": true,
					"description": "Persist environment configuration across VS Code sessions"
				},
				"muTwo.tasks.useIntegratedTerminal": {
					"type": "boolean",
					"default": true,
					"description": "Use integrated terminal for task execution with proper environment coordination"
				},
				"muTwo.tasks.showTaskOutput": {
					"type": "boolean",
					"default": true,
					"description": "Automatically show task output in terminal"
				}
			}
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run build-all",
		"build-extension": "vite build --config vite.extension.config.ts && (if not exist dist\\data mkdir dist\\data) && copy src\\data\\requirements.txt dist\\data\\ && copy src\\data\\circuitpython_devices.json dist\\data\\ && (if not exist dist\\bin mkdir dist\\bin) && copy src\\bin\\*.mjs dist\\bin\\",
		"build-views": "cd views && npm run build",
		"build-repl": "cd views && npm run build:repl",
		"build-editor": "cd views && npm run build:editor",
		"build-all": "npm run build-extension && npm run build-views",
		"build-all-reload": "npm run build-all && code --command workbench.action.reloadWindow",
		"dev-extension": "vite build --config vite.extension.config.ts",
		"dev-views": "cd views && npm run build:watch",
		"dev-repl": "cd views && npm run build:repl",
		"dev-editor": "cd views && npm run build:editor",
		"dev": "npm run build-all",
		"lint": "eslint",
		"compile": "npm run build-extension",
		"watch": "npm run dev-extension",
		"test": "npm run test:compile && vscode-test",
		"test:compile": "tsc -p test/tsconfig.integration-only.json",
		"test:watch": "npm run test:compile -- --watch",
		"test:unit": "vscode-test --testGlob='**/test/unit/**/*.test.js'",
		"test:integration": "npm run test:compile && vscode-test",
		"test:all": "npm run test:compile && vscode-test",
		"test:coverage": "nyc npm run test:unit"
	},
	"devDependencies": {
		"@electron/rebuild": "^4.0.1",
		"@eslint/js": "^9.13.0",
		"@stylistic/eslint-plugin": "^2.9.0",
		"@types/body-parser": "^1.19.6",
		"@types/cors": "^2.8.19",
		"@types/express": "^5.0.3",
		"@types/mocha": "^10.0.9",
		"@types/node": "^22.15.18",
		"@types/sinon": "^17.0.3",
		"@types/vscode": "^1.73.0",
		"@types/vscode-webview": "^1.57.5",
		"@types/w3c-web-usb": "^1.0.12",
		"@vscode/test-cli": "^0.0.10",
		"@vscode/test-electron": "^2.4.1",
		"concurrently": "^8.2.2",
		"electron-rebuild": "^3.2.9",
		"eslint": "^9.13.0",
		"mocha": "^10.8.0",
		"nyc": "^17.1.0",
		"sinon": "^19.0.2",
		"typescript": "^5.8.2",
		"typescript-eslint": "^8.26.0",
		"vite": "^6.3.5",
		"vscode-uri": "^3.1.0"
	},
	"dependencies": {
		"@adafruit/ble-file-transfer": "github:adafruit/ble-file-transfer-js",
		"@adafruit/circuitpython-repl-js": "github:adafruit/circuitpython-repl-js",
		"@microsoft/vscode-serial-monitor-api": "^0.1.7",
		"@serialport/parser-readline": "^13.0.0",
		"@vscode/debugadapter": "^1.68.0",
		"@vscode/debugprotocol": "^1.68.0",
		"@vscode/webview-ui-toolkit": "^1.4.0",
		"@xterm/addon-clipboard": "^0.1.0",
		"@xterm/addon-fit": "^0.10.0",
		"@xterm/addon-serialize": "^0.13.0",
		"@xterm/xterm": "^5.5.0",
		"serialport": "^13.0.0",
		"vscode-jsonrpc": "^8.2.1",
		"vscode-languageclient": "^9.0.1",
		"vscode-languageserver": "^9.0.1",
		"vscode-languageserver-textdocument": "^1.0.12"
	}
}
